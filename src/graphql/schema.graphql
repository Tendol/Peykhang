type Query {
  books(
    language_In: [PeykhangapiBookLanguageChoices]
    genre_Label_In: [String]
  ): [BookConnection]
  book(id: ID!): Book
  genres(label_In: [String]): [GenreConnection]
  authors: [AuthorConnection]
  publishers: [PublisherConnection]
}

enum PeykhangapiBookLanguageChoices {
  TIBETAN
  ENGLISH
  SPANISH
  CHINESE
  HINDI
  FRENCH
  ITALIAN
}

###### Connection #####

type BookConnection {
  edges: [BookNode]
}

type GenreConnection {
  edges: [GenreNode]
}

type AuthorConnection {
  edges: [AuthorNode]
}

type PublisherConnection {
  edges: [PublisherNode]
}

#### Node #####

type BookNode {
  node: Book
}

type GenreNode {
  node: Genre
}

type AuthorNode {
  node: Author
}

type PublisherNode {
  node: Publisher
}

#### Model ####

type Book {
  # bookMetaData: BookMetaData
  summary: String
  title: String
  id: ID
  isbn: String
  language: String
  genre: GenreConnection
  bookCoverUrl: String
  authors: AuthorConnection
  publisher: Publisher
  publicationDate: String
  richTextSummary: String
}

type Genre {
  id: ID
  label: String
}

type Author {
  id: ID
  firstName: String
  lastName: String
  summary: String
  authorImageUrl: String
}

type Publisher {
  id: ID
  name: String
}
